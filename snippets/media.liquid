{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
MEDIA COMPONENT
----------------------------------------------------------------------------------------------------------------------

Renders a single media. This snippet can be used for product media, but also for media coming from metafields.

********************************************
Supported variables
********************************************

* media: the media to render (required)
* sizes: an optional sizes attribute used for the image generation
* preload: if set to true, the image is preloaded and its fetch priority is higher
* autoplay: a boolean indicating if media of type video should autoplay. If set to false, a "play button" will be displayed on top of video
* loop: a boolean indicating if media type of type video should loop
* playsinline: controls if the video should be played inline. If none is passed, it will be set to true if the video is autoplaying
* muted: controls if the video sould be muted. If none is passed, it will be set to true if the video is autoplaying
* controls: if set to true, then the controls for the video are displayed
* group: an optional group to set for the media. When a group is set, only one media at a time of the given group can play.
* show_play_button: by default, a play button is added when video is not autoplaying. By setting it to false you can force turning off this behavior.
* play_button_background: an optional background color for the play button
* class: optional class applied on the item
{%- endcomment -%}

{%- comment -%}
  This logic determines if the media is above the fold (e.g., in the hero section)
  and should be preloaded for faster LCP. You must pass 'preload: true' to this
  snippet for your hero section video.
{%- endcomment -%}
{%- liquid
  if preload
    assign loading = 'eager'
    assign fetchpriority = 'high'
  else
    assign loading = 'lazy'
    assign fetchpriority = 'auto'
  endif
-%}

{%- case media.media_type -%}
  {%- when 'image' -%}
    {{- media | image_url: width: media.preview_image.width | image_tag: loading: loading, fetchpriority: fetchpriority, sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800,2000', class: class -}}

  {%- when 'video', 'external_video' -%}
    {%- comment -%}
      - A poster image is ALWAYS loaded first for a fast LCP.
      - The `preload` attribute for the video is set to "none" to prevent it from blocking the render.
      - The `loading="lazy"` on the video tag defers its loading.
      - A small script loads the video source after the page is interactive.
    {%- endcomment -%}
    <video-media
      class="deferred-media {{ class }}"
      style="--aspect-ratio: {{ media.aspect_ratio }};"
      data-media-id="{{ media.id }}"
    >
      <button
        id="Deferred-Poster-{{ media.id }}"
        class="deferred-media__poster"
        aria-label="Play video"
        {% if show_play_button != false %}show-play-button{% endif %}
      >
        {{- media | image_url: width: media.preview_image.width | image_tag: loading: loading, fetchpriority: fetchpriority, sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800,2000' -}}
      </button>
      <template>
        {%- liquid
          assign playsinline = playsinline | default: autoplay, allow_false: true
          assign muted = muted | default: autoplay, allow_false: true
          echo media | video_tag: class: 'media-video', controls: controls, playsinline: playsinline, muted: muted, loop: loop, preload: 'none', image_size: '2048x', loading: 'lazy'
        -%}
      </template>
    </video-media>

  {%- when 'model' -%}
    <model-media {% if class %}class="{{ class }}"{% endif %} style="aspect-ratio: {{ media.preview_image.aspect_ratio }}">
      {{- media | model_viewer_tag: image_size: '2048x', reveal: 'interaction', toggleable: true, loading: loading, fetchpriority: fetchpriority -}}
    </model-media>
{%- endcase -%}